.MODEL SMALL
.STACK 100H
.DATA
	a1_1 dw ?
	b1_1 dw ?
	c1_1 dw 3 dup(?)
	t0 dw ?
	t1 dw ?
	t2 dw ?
	t3 dw ?
	t4 dw ?
	t5 dw ?
.CODE
PRINT_ID PROC

	;SAVE IN STACK
	PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX

	;CHECK IF NEGATIVE
	OR AX, AX
	JGE PRINT_NUMBER

	;PRINT MINUS SIGN
	PUSH AX
	MOV AH, 2
	MOV DL, '-'
	INT 21H
	POP AX

	NEG AX

	PRINT_NUMBER:
	XOR CX, CX
	MOV BX, 10D

	REPEAT_CALC:

		;AX:DX- QUOTIENT:REMAINDER
		XOR DX, DX
		DIV BX  ;DIVIDE BY 10
		PUSH DX ;PUSH THE REMAINDER IN STACK

		INC CX

		OR AX, AX
		JNZ REPEAT_CALC

	MOV AH, 2

	PRINT_LOOP:
		POP DX
		ADD DL, 30H
		INT 21H
		LOOP PRINT_LOOP

	;NEWLINE
	MOV AH, 2
	MOV DL, 0AH
	INT 21H
	MOV DL, 0DH
	INT 21H

	POP AX
	POP BX
	POP CX
	POP DX

	RET
PRINT_ID ENDP

MAIN PROC

	;INITIALIZE DATA SEGMENT
	MOV AX, @DATA
	MOV DS, AX

; Adding
; Adding
	mov ax, 2
	add ax,  3
	mov t0, ax
	mov ax, 1
	mov bx, t0
	mul bx
	mov t1, ax
; Adding
; Adding
	mov ax, 2
	add ax,  3
	mov t0, ax
	mov ax, 1
	mov bx, t0
	mul bx
	mov t1, ax
	mov ax, t1
	cwd;
	mov bx, 3
	idiv bx
	mov t2, dx
	mov ax, t2
	mov a1_1, ax
	 mov ax, 1
	cmp ax, 5
	jl L0
	mov ax, 0 
	mov t3, ax
	jmp L1
	L0:
	mov ax, 1 
	mov t3, ax
L1:
	mov ax, t3
	mov b1_1, ax
	mov bx, 0
	add bx, bx
	mov ax, 2
	mov c1_1, ax
	mov ax, a1_1
	cmp ax, 0
	je L2
	mov ax, b1_1
	cmp ax, 0
	je L2
	mov ax, 1
	mov t4, ax
	jmp L3
	L2:
	mov ax, 0
	mov t4, ax
	L3:
	mov ax, t4
	cmp ax, 0
	je L4
	mov bx, 0
	add bx, bx
	mov ax, c1_1
	mov t5, ax
	inc c1_1
	jmp L5
	L4:
	mov bx, 1
	add bx, bx
	mov bx, 0
	add bx, bx
	mov ax, c1_1
	mov c1_1, ax
	L5:

	MOV AX, a1_1
	CALL PRINT_ID

	MOV AX, b1_1
	CALL PRINT_ID
	endp main
end main